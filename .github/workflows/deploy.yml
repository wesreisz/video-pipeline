name: Deploy Video Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ closed ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Only run on main/master branch pushes or merged PRs
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || (github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'master'))
    
    permissions:
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip unzip
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.5
        terraform_wrapper: false
    
    - name: Verify AWS connection
      run: |
        aws sts get-caller-identity
        aws s3 ls || echo "S3 access check completed"
    
    - name: Set environment variables
      run: |
        echo "PROJECT_ROOT=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    
    - name: Make deploy script executable
      run: chmod +x infra/environments/dev/deploy.sh
    
    - name: Run deployment
      working-directory: infra/environments/dev
      run: |
        echo "Starting deployment process..."
        ./deploy.sh
      env:
        # Add any additional environment variables your deployment needs
        ENVIRONMENT: dev
        PYTHONPATH: ${{ github.workspace }}
        # Terraform variables for API keys
        TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        TF_VAR_pinecone_api_key: ${{ secrets.PINECONE_API_KEY }}
        TF_VAR_certificate_domain: ${{ secrets.CERTIFICATE_DOMAIN || 'icaet-dev.wesleyreisz.com' }}
    
    - name: Upload deployment artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: deployment-logs-${{ github.run_number }}
        path: |
          infra/build/
          infra/environments/dev/terraform.tfstate
          infra/environments/dev/.terraform/
        retention-days: 30
    
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Video Pipeline deployment completed successfully!"
        echo "üöÄ All modules deployed and tested"
        echo "üìä End-to-end tests passed"
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Video Pipeline deployment failed!"
        echo "Please check the logs above for details"
        exit 1 